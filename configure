#!/usr/bin/ruby

require 'rbconfig'

PLATFORM = lambda {
  if RbConfig::CONFIG['target_os'] =~ /windows/i
    'windows'
  elsif RbConfig::CONFIG['target_os'] =~ /mingw32/i
    'windows'
  elsif RbConfig::CONFIG['target_os'] =~ /cygwin/i
    'cygwin'
  elsif RbConfig::CONFIG['target_os'] =~ /darwin/i
    'macosx'
  elsif RbConfig::CONFIG['target_os'] =~ /linux/i
    'linux'
  elsif RbConfig::CONFIG['target_os'] =~ /bsd/i
    'bsd'
  else
    raise "#{RbConfig::CONFIG['target_os']} is an unknown platform!"
  end
}.call

case ARGV[0]
  when 'debug'
  when 'development'
  when 'release'
  else
    raise "`#{ARGV[0]}` is an invalid configuration!\n"
end

BUILD = ARGV[0]

LIB_BUILD = lambda {
  case ARGV[0]
    when 'debug'
      'debug'
    when 'development'
      'release'
    when 'release'
      'release'
  end
}.call

RENDERER = lambda {
  ARGV.each { |arg|
    if arg =~ /--renderer=/
      return arg.split('=')[1].downcase
    end
  }

  throw "No renderer specified (with --renderer)!"
}.call

File.open('tup.config', 'w') do |cfg|
  cfg.write "# This file was generated by ./configure #{ARGV.join(' ')}\n\n"
  cfg.write "CONFIG_BUTANE_BUILD=#{BUILD}\n"
  cfg.write "CONFIG_FOUNDATION_BUILD=#{LIB_BUILD}\n"
  cfg.write "CONFIG_LUA_BUILD=#{LIB_BUILD}\n"
  cfg.write "CONFIG_RENDERER=#{RENDERER}\n"

  if RENDERER == 'd3d11'
    DXSDK_DIR = `set DXSDK_DIR`.split('DXSDK_DIR=')[1].strip
    cfg.write "CONFIG_DXSDK_DIR=#{DXSDK_DIR}\n"
  end

  if PLATFORM == 'windows'
    WINDOWS_SDK_DIR = lambda {
      ARGV.each { |arg|
        if arg =~ /--winsdk=/
          return arg.split('=')[1]
        end
      }

      return "C:\\Program Files\\Microsoft SDKs\\Windows\\v7.1"
    }.call

    cfg.write "CONFIG_WINDOWS_SDK_DIR=#{WINDOWS_SDK_DIR}\n"
  end
end
